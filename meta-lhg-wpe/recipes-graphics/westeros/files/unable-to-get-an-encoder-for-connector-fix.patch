diff --git a/drm/westeros-gl/westeros-gl.c b/drm/westeros-gl/westeros-gl.c
index 8608c47..5eb17b7 100644
--- a/drm/westeros-gl/westeros-gl.c
+++ b/drm/westeros-gl/westeros-gl.c
@@ -628,6 +628,43 @@ static void swapDRMBuffers(void* nativeBuffer)
    }
 }
 
+static uint32_t find_crtc_for_encoder(drmModeRes *res, drmModeEncoder *encoder)
+{
+    int i;
+
+    for (i = 0; i < res->count_crtcs; i++)
+    {
+        if (encoder->possible_crtcs & (1 << i))
+        {
+            return res->crtcs[i];
+        }
+    }
+
+    return -1;
+}
+
+static uint32_t find_crtc_for_connector(WstGLCtx *ctx, drmModeRes *res, drmModeConnector *conn)
+{
+    int i;
+
+    for (i = 0; i < conn->count_encoders; i++)
+    {
+        drmModeEncoder *encoder = drmModeGetEncoder(ctx->drmFd, conn->encoders[i]);
+
+        if (encoder) {
+            uint32_t crtc_id = find_crtc_for_encoder(res, encoder);
+
+            drmModeFreeEncoder(encoder);
+            if (crtc_id != 0)
+            {
+                return crtc_id;
+            }
+        }
+    }
+
+    return -1;
+}
+
 static bool setupDRM( WstGLCtx *ctx )
 {
    bool result= false;
@@ -764,9 +801,23 @@ static bool setupDRM( WstGLCtx *ctx )
    }
    else
    {
-      printf("westeros-gl: setupDrm: unable to get an encoder for connector %p on card (%s)\n",
-             ctx->drmConnector, card );
-      goto exit;
+         uint32_t crtc_id = find_crtc_for_connector(ctx, res, conn);
+           if (crtc_id == 0)
+           {
+                  printf("westeros-gl: setupDrm: unable to get an encoder/CRTC for connector %p on card (%s)\n", ctx->drmConnector, c
+           }
+           else
+           {
+                  printf("westeros-gl: setupDrm: found the CRTC %d for the connecter %p\n", crtc_id, ctx->drmConnector);
+                  for (i = 0; i < res->count_crtcs; i++) {
+                          if (res->crtcs[i] == crtc_id) {
+                              break;
+                          }
+                  }
+                  ctx->drmEncoder = drmModeGetEncoder(ctx->drmFd, res->encoders[i]);
+                  ctx->drmEncoder->crtc_id = crtc_id;
+                  result= true;
+           }
    }
 
 exit:
